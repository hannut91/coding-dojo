/**
 * ## 이해
 *
 * 미지의 것: 수열을 내림차순으로 정렬하라
 * 자료
 *   - 배열이 있다
 *   - 자바스크립트의 배열은 sort() 메서드가 구현되어 있다.
 *   - sort는 두 개의 매개변수를 받는데, 1을 반환하면 뒤의 요소가 더 크다. -1을
 *     반환하면 뒤의 요소가 더 작다. 0을 반환하면 같음을 의미한다.
 * 조건
 *   -
 *
 * ## 계획
 *   -
 *
 * ## 실행
 *
 * ## 반성
 *   - 관성적으로 sort((a, b) => b - a)로 풀고 싶었지만 이렇게 하면 실력이 늘 것
 *     같지 않아서 MDN의 sort를 다시 봤고 실험해 봤다. 이전에는 [1,2,3,4,5]가
 *     들어오면, a, b가 [1, 2], [2, 3], [3, 4], [4, 5]로 들어올 줄 알았는데
 *     아니었다. 반대로 되어있었다. [2, 1], [3, 2], [4, 3], [5, 4]로 들어온다.
 *     그래서 반환하는 값이 1보다 크다는 것은 뒤의 요소가 앞 요소보다 뒤에 위치한다는 의미다. 만약
 *     -1을 반환하면 뒤의 요소가 더 앞에 위치해야 한다는 의미다 0은 같다라는
 *     의미다. 그래서 a - b를 반환하면 뒤의 요소가 더 클 경우 1보다 크므로
 *     오름차순으로 정렬되고, 반대로 b - a를 반환하면 뒤의 요소가 더 클 경우 음수를 반환하여
 *     뒤의 요소가 앞에 위치하므로 내림차순으로 정렬된다.
 */
const run = arr => arr.sort((a, b) => {
  if (a === b) {
    return 0;
  }

  if (a > b) {
    return -1;
  }
  return 1;
});

test('run', () => {
  expect(run([15, 27, 12])).toEqual([27, 15, 12]);
});
